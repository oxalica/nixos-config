From 33cd99f08888e5a00f06c80e858d32264ac02f8f Mon Sep 17 00:00:00 2001
From: LebJe <51171427+LebJe@users.noreply.github.com>
Date: Tue, 22 Nov 2022 12:21:14 -0500
Subject: [PATCH] feat(highlight): Link `CocSem*` and `CocSymbol*` to `@*`
 because nvim-treesitter removed `TS*`
 (https://github.com/nvim-treesitter/nvim-treesitter/pull/3656)

commit
---
 plugin/coc.vim | 118 ++++++++++++++++++++++++-------------------------
 1 file changed, 59 insertions(+), 59 deletions(-)

diff --git a/plugin/coc.vim b/plugin/coc.vim
index ba31c77f99a..20030569914 100644
--- a/plugin/coc.vim
+++ b/plugin/coc.vim
@@ -546,31 +546,31 @@ function! s:Highlight() abort
 
   if get(g:, 'coc_default_semantic_highlight_groups', 1)
     let hlMap = {
-        \ 'Namespace': ['TSNamespace', 'Include'],
-        \ 'Type': ['TSType', 'Type'],
-        \ 'Class': ['TSConstructor', 'Special'],
-        \ 'Enum': ['TSEnum', 'Type'],
-        \ 'Interface': ['TSInterface', 'Type'],
-        \ 'Struct': ['TSStruct', 'Identifier'],
-        \ 'TypeParameter': ['TSParameter', 'Identifier'],
-        \ 'Parameter': ['TSParameter', 'Identifier'],
-        \ 'Variable': ['TSSymbol', 'Identifier'],
-        \ 'Property': ['TSProperty', 'Identifier'],
-        \ 'EnumMember': ['TSEnumMember', 'Constant'],
-        \ 'Event': ['TSEvent', 'Keyword'],
-        \ 'Function': ['TSFunction', 'Function'],
-        \ 'Method': ['TSMethod', 'Function'],
-        \ 'Macro': ['TSConstMacro', 'Define'],
-        \ 'Keyword': ['TSKeyword', 'Keyword'],
-        \ 'Modifier': ['TSModifier', 'StorageClass'],
-        \ 'Comment': ['TSComment', 'Comment'],
-        \ 'String': ['TSString', 'String'],
-        \ 'Number': ['TSNumber', 'Number'],
-        \ 'Boolean': ['TSBoolean', 'Boolean'],
-        \ 'Regexp': ['TSStringRegex', 'String'],
-        \ 'Operator': ['TSOperator', 'Operator'],
-        \ 'Decorator': ['TSSymbol', 'Identifier'],
-        \ 'Deprecated': ['TSStrike', 'CocDeprecatedHighlight']
+        \ 'Namespace': ['@namespace', 'Include'],
+        \ 'Type': ['@type', 'Type'],
+        \ 'Class': ['@constructor', 'Special'],
+        \ 'Enum': ['@type', 'Type'],
+        \ 'Interface': ['@type', 'Type'],
+        \ 'Struct': ['@structure', 'Identifier'],
+        \ 'TypeParameter': ['@parameter', 'Identifier'],
+        \ 'Parameter': ['@parameter', 'Identifier'],
+        \ 'Variable': ['@variable', 'Identifier'],
+        \ 'Property': ['@property', 'Identifier'],
+        \ 'EnumMember': ['@property', 'Constant'],
+        \ 'Event': ['@keyword', 'Keyword'],
+        \ 'Function': ['@function', 'Function'],
+        \ 'Method': ['@method', 'Function'],
+        \ 'Macro': ['@constant.macro', 'Define'],
+        \ 'Keyword': ['@keyword', 'Keyword'],
+        \ 'Modifier': ['@storageclass', 'StorageClass'],
+        \ 'Comment': ['@comment', 'Comment'],
+        \ 'String': ['@string', 'String'],
+        \ 'Number': ['@number', 'Number'],
+        \ 'Boolean': ['@boolean', 'Boolean'],
+        \ 'Regexp': ['@string.regex', 'String'],
+        \ 'Operator': ['@operator', 'Operator'],
+        \ 'Decorator': ['@symbol', 'Identifier'],
+        \ 'Deprecated': ['@text.strike', 'CocDeprecatedHighlight']
         \ }
     for [key, value] in items(hlMap)
       let ts = get(value, 0, '')
@@ -579,40 +579,40 @@ function! s:Highlight() abort
     endfor
   endif
   let symbolMap = {
-      \ 'Keyword': ['TSKeyword', 'Keyword'],
-      \ 'Namespace': ['TSNamespace', 'Include'],
-      \ 'Class': ['TSConstructor', 'Special'],
-      \ 'Method': ['TSMethod', 'Function'],
-      \ 'Property': ['TSProperty', 'Identifier'],
-      \ 'Text': ['TSText', 'CocSymbolDefault'],
-      \ 'Unit': ['TSUnit', 'CocSymbolDefault'],
-      \ 'Value': ['TSValue', 'CocSymbolDefault'],
-      \ 'Snippet': ['TSSnippet', 'CocSymbolDefault'],
-      \ 'Color': ['TSColor', 'Float'],
-      \ 'Reference': ['TSTextReference', 'Constant'],
-      \ 'Folder': ['TSFolder', 'CocSymbolDefault'],
-      \ 'File': ['TSFile', 'Statement'],
-      \ 'Module': ['TSModule', 'Statement'],
-      \ 'Package': ['TSPackage', 'Statement'],
-      \ 'Field': ['TSField', 'Identifier'],
-      \ 'Constructor': ['TSConstructor', 'Special'],
-      \ 'Enum': ['TSEnum', 'CocSymbolDefault'],
-      \ 'Interface': ['TSInterface', 'CocSymbolDefault'],
-      \ 'Function': ['TSFunction', 'Function'],
-      \ 'Variable': ['TSVariableBuiltin', 'Special'],
-      \ 'Constant': ['TSConstant', 'Constant'],
-      \ 'String': ['TSString', 'String'],
-      \ 'Number': ['TSNumber', 'Number'],
-      \ 'Boolean': ['TSBoolean', 'Boolean'],
-      \ 'Array': ['TSArray', 'CocSymbolDefault'],
-      \ 'Object': ['TSObject', 'CocSymbolDefault'],
-      \ 'Key': ['TSKey', 'Identifier'],
-      \ 'Null': ['TSNull', 'Type'],
-      \ 'EnumMember': ['TSEnumMember', 'Identifier'],
-      \ 'Struct': ['TSStruct', 'Keyword'],
-      \ 'Event': ['TSEvent', 'Constant'],
-      \ 'Operator': ['TSOperator', 'Operator'],
-      \ 'TypeParameter': ['TSParameter', 'Identifier'],
+      \ 'Keyword': ['@keyword', 'Keyword'],
+      \ 'Namespace': ['@namespace', 'Include'],
+      \ 'Class': ['@constructor', 'Special'],
+      \ 'Method': ['@method', 'Function'],
+      \ 'Property': ['@property', 'Identifier'],
+      \ 'Text': ['@text', 'CocSymbolDefault'],
+      \ 'Unit': ['@unit', 'CocSymbolDefault'],
+      \ 'Value': ['@value', 'CocSymbolDefault'],
+      \ 'Snippet': ['@snippet', 'CocSymbolDefault'],
+      \ 'Color': ['@color', 'Float'],
+      \ 'Reference': ['@text.reference', 'Constant'],
+      \ 'Folder': ['@folder', 'CocSymbolDefault'],
+      \ 'File': ['@file', 'Statement'],
+      \ 'Module': ['@module', 'Statement'],
+      \ 'Package': ['@package', 'Statement'],
+      \ 'Field': ['@field', 'Identifier'],
+      \ 'Constructor': ['@constructor', 'Special'],
+      \ 'Enum': ['@type', 'CocSymbolDefault'],
+      \ 'Interface': ['@type', 'CocSymbolDefault'],
+      \ 'Function': ['@function', 'Function'],
+      \ 'Variable': ['@variable.builtin', 'Special'],
+      \ 'Constant': ['@constant', 'Constant'],
+      \ 'String': ['@string', 'String'],
+      \ 'Number': ['@number', 'Number'],
+      \ 'Boolean': ['@boolean', 'Boolean'],
+      \ 'Array': ['@array', 'CocSymbolDefault'],
+      \ 'Object': ['@object', 'CocSymbolDefault'],
+      \ 'Key': ['@key', 'Identifier'],
+      \ 'Null': ['@null', 'Type'],
+      \ 'EnumMember': ['@property', 'Identifier'],
+      \ 'Struct': ['@structure', 'Keyword'],
+      \ 'Event': ['@constant', 'Constant'],
+      \ 'Operator': ['@operator', 'Operator'],
+      \ 'TypeParameter': ['@parameter', 'Identifier'],
       \ }
   for [key, value] in items(symbolMap)
     let hlGroup = hlexists(value[0]) ? value[0] : get(value, 1, 'CocSymbolDefault')
